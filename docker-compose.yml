version: '3'

networks:
  gonet:
    driver: bridge

services:
  traefik:
    image: traefik:2.10
    restart: always
    ports:
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080
      # The HTTP port
      - 80:80
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # The Static Configuration
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - gonet

  auth:
    container_name: auth
    depends_on:
      - traefik
      - mailhog
      - redis
      - postgres
    build:
      context: ./docker/dev
    tty: true
    volumes:
      - ./:/go/src/go-boilerplate
    labels:
      - traefik.http.routers.auth-router.entrypoints=http
      - traefik.http.routers.auth-router.rule=PathPrefix(`/api`)
      - traefik.http.routers.auth-router.service=auth-service
      - traefik.http.services.auth-service.loadbalancer.server.port=80
    environment:
      GO_DEBUG: "true"
      GO_SECRET_KEY: ${GO_SECRET_KEY}

      # Redis 設定
      GO_REDIS_HOST: ${GO_REDIS_HOST}
      GO_REDIS_PASSWORD: ${GO_REDIS_PASSWORD}

      # Postgres 設定
      GO_POSTGRES_HOST: ${GO_POSTGRES_HOST}
      GO_POSTGRES_PORT: ${GO_POSTGRES_PORT}
      GO_POSTGRES_USER: ${GO_POSTGRES_USER}
      GO_POSTGRES_PASSWORD: ${GO_POSTGRES_PASSWORD}
      GO_POSTGRES_DB: ${GO_POSTGRES_DB}

      # Mail 設定
      GO_MAIL_FROM_NAME: ${GO_MAIL_FROM_NAME}
      GO_MAIL_FROM_ADDRESS: ${GO_MAIL_FROM_ADDRESS}
      GO_MAIL_SMTP_HOST: ${GO_MAIL_SMTP_HOST}
      GO_MAIL_SMTP_PORT: ${GO_MAIL_SMTP_PORT}
      GO_MAIL_SMTP_USERNAME: ${GO_MAIL_SMTP_USERNAME}
      GO_MAIL_SMTP_PASSWORD: ${GO_MAIL_SMTP_PASSWORD}
    networks:
      - gonet

  mailhog:
    image: mailhog/mailhog
    ports:
      # SMTP server
      - 1025:1025
      # Web UI
      - 8025:8025
    networks:
      - gonet

  redis:
    image: redis:7.0
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${GO_REDIS_PASSWORD}
    volumes:
      - ../data/go-boilerplate/redis:/data
    networks:
      - gonet

  postgres:
    image: postgres:15.1
    restart: always
    ports:
      - "5432:5432"
    command: postgres -c log_statement=all
    volumes:
      - ../data/go-boilerplate/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${GO_POSTGRES_USER}
      POSTGRES_PASSWORD: ${GO_POSTGRES_PASSWORD}
      POSTGRES_DB: ${GO_POSTGRES_DB}
    networks:
      - gonet
